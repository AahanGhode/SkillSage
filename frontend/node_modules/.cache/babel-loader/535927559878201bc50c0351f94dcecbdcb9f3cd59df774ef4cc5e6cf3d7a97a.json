{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matth\\\\Desktop\\\\quizwiz\\\\frontend\\\\src\\\\components\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport \"./FileUpload.css\";\nimport axois from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const inputRef = useRef();\n\n  //State variables for tracking file-related information\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState(\"select\");\n\n  //Handle file change event\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files.length > 0) {\n      setSelectedFile(event.target.files[0]);\n    }\n  };\n\n  // Function to trigger file input dialog\n  const onChooseFile = () => {\n    inputRef.current.click();\n  };\n\n  //Function to clear selected file\n  const clearFileInput = () => {\n    inputRef.current.value = \"\";\n    setSelectedFile(null);\n    setProgress(0);\n    setUploadStatus(\"select\");\n  };\n\n  //Function to handle file upload\n  const handleUpload = async () => {\n    //If upload is already done, clear and return \n    if (uploadStatus === \"done\") {\n      clearFileInput();\n      return;\n    }\n    try {\n      //Set upload status to 'uploading'\n      setUploadStatus(\"uploading\");\n\n      //Create FormData and apppend the selected file\n      const formData = new FormData();\n      formData.append(\"file\", selectedFile);\n\n      //Make a POST request to the server with the file\n      await axois.post(\"http://localhost:3001/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        onUploadProgress: progressEvent => {\n          //Calculate upload progress\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(percentCompleted);\n        }\n      });\n      setUploadStatus(\"done\");\n    } catch (error) {\n      setUploadStatus(\"select\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"file\",\n      onChange: handleFileChange,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), !selectedFile && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"file-btn\",\n      onClick: onChooseFile,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        children: \"upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), \" Upload File\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined icon\",\n          children: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: selectedFile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bg\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress\",\n                style: {\n                  width: `${progress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), uploadStatus === \"select\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearFileInput,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-symbols-outlined close-icon\",\n              children: \"close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"check-circle\",\n            children: uploadStatus === \"uploading\" ? `${progress}%` : uploadStatus === \"done\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-symbols-outlined\",\n              style: {\n                fontSize: \"20px\"\n              },\n              children: \"check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 23\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-btn\",\n        onClick: handleUpload,\n        children: uploadStatus === \"select\" || uploadStatus === \"uploading\" ? \"Upload\" : \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(FileUpload, \"n9Xkr9nu8OgVi4llu+15Ga8yE4M=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useRef","useState","axois","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUpload","_s","inputRef","selectedFile","setSelectedFile","progress","setProgress","uploadStatus","setUploadStatus","handleFileChange","event","target","files","length","onChooseFile","current","click","clearFileInput","value","handleUpload","formData","FormData","append","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","error","children","ref","type","onChange","style","display","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","flex","name","width","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/matth/Desktop/quizwiz/frontend/src/components/FileUpload.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport \"./FileUpload.css\";\r\nimport axois from \"axios\";\r\n\r\nconst FileUpload = () => {\r\n  const inputRef = useRef();\r\n\r\n  //State variables for tracking file-related information\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [uploadStatus, setUploadStatus] = useState(\"select\");\r\n\r\n  //Handle file change event\r\n  const handleFileChange = (event) => {\r\n    if (event.target.files && event.target.files.length > 0) {\r\n      setSelectedFile(event.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // Function to trigger file input dialog\r\n  const onChooseFile = () => {\r\n    inputRef.current.click();\r\n  };\r\n\r\n  //Function to clear selected file\r\n  const clearFileInput = () => {\r\n    inputRef.current.value = \"\";\r\n    setSelectedFile(null);\r\n    setProgress(0); \r\n    setUploadStatus(\"select\");\r\n  };\r\n\r\n  //Function to handle file upload\r\n  const handleUpload = async () => {\r\n    //If upload is already done, clear and return \r\n    if (uploadStatus === \"done\") {\r\n      clearFileInput();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      //Set upload status to 'uploading'\r\n      setUploadStatus(\"uploading\");\r\n\r\n      //Create FormData and apppend the selected file\r\n      const formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n\r\n      //Make a POST request to the server with the file\r\n      await axois.post(\r\n        \"http://localhost:3001/upload\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n          onUploadProgress: (progressEvent) => {\r\n            //Calculate upload progress\r\n            const percentCompleted = Math.round(\r\n              (progressEvent.loaded * 100) / progressEvent.total\r\n            );\r\n            setProgress(percentCompleted);\r\n          },\r\n        },\r\n      );\r\n\r\n      setUploadStatus(\"done\");\r\n    } catch (error) {\r\n      setUploadStatus(\"select\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* File input  element with a reference*/}\r\n      <input\r\n        ref={inputRef}\r\n        type=\"file\"\r\n        onChange={handleFileChange}\r\n        style={{ display: \"none\" }}\r\n      />\r\n\r\n      {/* Button to trigger file input dialog */}\r\n      {!selectedFile && (\r\n        <button className=\"file-btn\" onClick={onChooseFile}>\r\n          <span className=\"material-symbols-outlined\">upload</span> Upload File\r\n        </button>\r\n      )}\r\n\r\n      {/* Display file information  and progress when a file is selected*/}\r\n      {selectedFile && (\r\n        <div>\r\n          <div className=\"file-card\">\r\n            <span className=\"material-symbols-outlined icon\">description</span>\r\n\r\n            <div className=\"file-info\">\r\n              <div style={{ flex: 1 }}>\r\n                {/*Display file name here and progress bar*/}\r\n                <h6>{selectedFile.name}</h6>\r\n                <div className=\"progress-bg\">\r\n                  <div className=\"progress\" style={{ width: `${progress}%` }} />\r\n                </div>\r\n              </div>\r\n\r\n              {/*Display clear button or upload progress/checkmark*/}\r\n                {uploadStatus === \"select\" ? (\r\n                  <button onClick={clearFileInput}>\r\n                  <span className=\"material-symbols-outlined close-icon\">\r\n                    close\r\n                  </span>\r\n                </button>\r\n                ) : (\r\n                  <div className=\"check-circle\">\r\n                    {uploadStatus === \"uploading\" ? (\r\n                      `${progress}%`\r\n                    ) : uploadStatus === \"done\" ? (\r\n                      <span\r\n                        className=\"material-symbols-outlined\"\r\n                        style = {{ fontSize: \"20px\"}}\r\n                      >\r\n                        check\r\n                      </span>\r\n                    ) : null}\r\n                  </div>\r\n                )}\r\n\r\n            </div>\r\n          </div>\r\n\r\n          {/*Button to finalize upload or clear section*/}\r\n          <button className=\"upload-btn\" onClick={handleUpload}>\r\n            {uploadStatus === \"select\" || uploadStatus ===\"uploading\"\r\n              ? \"Upload\"\r\n              : \"Done\"}\r\n          </button> \r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FileUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}