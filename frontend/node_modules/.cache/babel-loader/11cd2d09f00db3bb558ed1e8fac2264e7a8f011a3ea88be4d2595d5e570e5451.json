{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matth\\\\Desktop\\\\quizwiz\\\\frontend\\\\src\\\\components\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Cards.css';\nimport rightArrow from '../images/right-arrow.png';\nimport leftArrow from '../images/left-arrow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const [isFlipped, setIsFlipped] = useState(false);\n  const flashcards = [\"What is the capital of France?\", \"What is the largest planet in our solar system?\", \"Who wrote 'Romeo and Juliet'?\", \"What is the chemical symbol for water?\", \"What is the powerhouse of the cell?\"];\n  const [currentFlashcardIndex, setCurrentFlashcardIndex] = useState(0);\n  useEffect(() => {\n    const handleKeyPress = event => {\n      if (event.keyCode === 37) {\n        // Left arrow key\n        setCurrentFlashcardIndex(prevIndex => (prevIndex - 1 + flashcards.length) % flashcards.length);\n      } else if (event.keyCode === 39) {\n        // Right arrow key\n        setCurrentFlashcardIndex(prevIndex => (prevIndex + 1) % flashcards.length);\n      } else if (event.keyCode === 32) {\n        // Spacebar\n        setIsFlipped(!isFlipped);\n      }\n    };\n    document.addEventListener('keydown', handleKeyPress);\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flashcard\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: flashcards[currentFlashcardIndex]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Cards, \"xcYdEQ22w7bZurCdQbWG/EJJpiQ=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","useEffect","rightArrow","leftArrow","jsxDEV","_jsxDEV","Cards","_s","isFlipped","setIsFlipped","flashcards","currentFlashcardIndex","setCurrentFlashcardIndex","handleKeyPress","event","keyCode","prevIndex","length","document","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/matth/Desktop/quizwiz/frontend/src/components/Cards.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Cards.css';\r\nimport rightArrow from '../images/right-arrow.png';\r\nimport leftArrow from '../images/left-arrow.png';\r\n\r\nconst Cards = () => {\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n    const flashcards = [\r\n        \"What is the capital of France?\",\r\n        \"What is the largest planet in our solar system?\",\r\n        \"Who wrote 'Romeo and Juliet'?\",\r\n        \"What is the chemical symbol for water?\",\r\n        \"What is the powerhouse of the cell?\"\r\n    ];\r\n\r\n    const [currentFlashcardIndex, setCurrentFlashcardIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const handleKeyPress = (event) => {\r\n            if (event.keyCode === 37) { // Left arrow key\r\n                setCurrentFlashcardIndex((prevIndex) => (prevIndex - 1 + flashcards.length) % flashcards.length);\r\n            } else if (event.keyCode === 39) { // Right arrow key\r\n                setCurrentFlashcardIndex((prevIndex) => (prevIndex + 1) % flashcards.length);\r\n            } else if (event.keyCode === 32) { // Spacebar\r\n                setIsFlipped(!isFlipped);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('keydown', handleKeyPress);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyPress);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flashcard\">\r\n            <h2>{flashcards[currentFlashcardIndex]}</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,SAAS,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMU,UAAU,GAAG,CACf,gCAAgC,EAChC,iDAAiD,EACjD,+BAA+B,EAC/B,wCAAwC,EACxC,qCAAqC,CACxC;EAED,MAAM,CAACC,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAErEC,SAAS,CAAC,MAAM;IACZ,MAAMY,cAAc,GAAIC,KAAK,IAAK;MAC9B,IAAIA,KAAK,CAACC,OAAO,KAAK,EAAE,EAAE;QAAE;QACxBH,wBAAwB,CAAEI,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,GAAGN,UAAU,CAACO,MAAM,IAAIP,UAAU,CAACO,MAAM,CAAC;MACpG,CAAC,MAAM,IAAIH,KAAK,CAACC,OAAO,KAAK,EAAE,EAAE;QAAE;QAC/BH,wBAAwB,CAAEI,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIN,UAAU,CAACO,MAAM,CAAC;MAChF,CAAC,MAAM,IAAIH,KAAK,CAACC,OAAO,KAAK,EAAE,EAAE;QAAE;QAC/BN,YAAY,CAAC,CAACD,SAAS,CAAC;MAC5B;IACJ,CAAC;IAEDU,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEN,cAAc,CAAC;IAEpD,OAAO,MAAM;MACTK,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEP,cAAc,CAAC;IAC3D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACtBjB,OAAA;MAAAiB,QAAA,EAAKZ,UAAU,CAACC,qBAAqB;IAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEd,CAAC;AAACnB,EAAA,CApCID,KAAK;AAAAqB,EAAA,GAALrB,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}